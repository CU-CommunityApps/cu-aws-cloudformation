AWSTemplateFormatVersion: '2010-09-09'
Description: >
  Shib role for specifically tagged resource access.
Parameters:
  TagKey:
    Description: Tag key to match between IAM role and resources (ie. eds:team)
    Type: String
  TagValue:
    Description: Tag value name (ie. analytics)
    Type: String
  S3Access:
    Description: Access to S3 Resources?
    Default: 'no'
    Type: String
    AllowedValues: ['yes', 'no']
  EC2Access:
    Description: Limited Access to EC2 Resources?
    Default: 'no'
    Type: String
    AllowedValues: ['yes', 'no']
  EC2FullAccess:
    Description: Full Access to EC2 Resources?
    Default: 'no'
    Type: String
    AllowedValues: ['yes', 'no']
  DMSAccess:
    Description: Access to DMS Resources?
    Default: 'no'
    Type: String
    AllowedValues: ['yes', 'no']
  SQSAccess:
    Description: Access to SQS Resources?
    Default: 'no'
    Type: String
    AllowedValues: ['yes', 'no']
  ECSAccess:
    Description: Access to ECS Resources?
    Default: 'no'
    Type: String
    AllowedValues: ['yes', 'no']
  GlueAccess:
    Description: Access to Glue Resources?
    Default: 'no'
    Type: String
    AllowedValues: ['yes', 'no']
  SageMakerFullAccess:
    Description: Full Access to SageMaker Resources?
    Default: 'no'
    Type: String
    AllowedValues: ['yes', 'no']
  BucketNamePrefix:
    Description: S3 bucket name prefix to grant access to (if applicable)
    Type: String

Conditions:
  CreateS3: !Equals [ !Ref S3Access, 'yes' ]
  CreateEC2: !Equals [ !Ref EC2Access, 'yes' ]
  CreateEC2Full: !Equals [ !Ref EC2FullAccess, 'yes' ]
  CreateDMS: !Equals [ !Ref DMSAccess, 'yes' ]
  CreateSQS: !Equals [ !Ref SQSAccess, 'yes' ]
  CreateECS: !Equals [ !Ref ECSAccess, 'yes' ]
  CreateGlue: !Equals [ !Ref GlueAccess, 'yes' ]
  CreateSageMakerFull: !Equals [ !Ref SageMakerFullAccess, 'yes' ]

Resources:
  TagBasedResourceGroup:
    Type: AWS::ResourceGroups::Group
    Properties:
      Name: !Join [ '-', [ 'tagged', !Ref TagValue ] ]
      Description: !Sub "A group that is based on a tag query - ${TagValue}"
      ResourceQuery:
        Type:
          "TAG_FILTERS_1_0" 
        Query:
          ResourceTypeFilters: 
            - "AWS::AllSupported" 
          TagFilters:
            - 
              Key: !Ref TagKey
              Values: 
                - !Ref TagValue

  IAMRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Join [ '-', [ 'shib', !Ref TagValue ] ]
      Tags:
        - Key: !Ref TagKey
          Value: !Ref TagValue
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          -
            Effect: Allow
            Principal:
              Federated: !Sub "arn:${AWS::Partition}:iam::${AWS::AccountId}:saml-provider/cornell_idp"
            Action: sts:AssumeRoleWithSAML
            Condition:
              StringEquals:
                SAML:aud: https://signin.aws.amazon.com/saml
                
  ResourceGroupPolicy:
    DependsOn: TagBasedResourceGroup
    Type: 'AWS::IAM::Policy'
    Properties:
      PolicyName: !Join [ '-', [ 'resource', 'groups', !Ref TagValue ] ]
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
          -
            Effect: Allow
            Action: 
              - 'tag:*'
              - 'resource-groups:ListGroups'
            Resource: '*'
          - 
            Effect: Allow
            Action: 
              - 'resource-groups:List*'
              - 'resource-groups:Get*'
              - 'resource-groups:SearchResources'
            Resource: !GetAtt TagBasedResourceGroup.Arn
      Roles:
        - !Ref IAMRole

  S3Policy:
    Condition: CreateS3
    Type: 'AWS::IAM::Policy'
    Properties:
      PolicyName: !Join [ '-', [ 's3', !Ref TagValue ] ]
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
          -
            Effect: Allow
            Action: 's3:*'
            Resource:
              - !Sub 'arn:${AWS::Partition}:s3:::${BucketNamePrefix}*'
              - !Sub 'arn:${AWS::Partition}:s3:::${BucketNamePrefix}*/*'
          -
            Effect: Allow
            Action: 's3:ListAllMyBuckets'
            Resource: '*'
          - 
            Effect: Deny
            Action: 's3:PutBucketTagging'
            Resource: '*'
      Roles:
        - !Ref IAMRole

  EC2Policy:
    Condition: CreateEC2
    Type: 'AWS::IAM::Policy'
    Properties:
      PolicyName: !Join [ '-', [ 'ec2', !Ref TagValue ] ]
      PolicyDocument:
        !Sub 
          - |
            {
                "Version": "2012-10-17",
                "Statement": [
                    {
                        "Effect": "Allow",
                        "Action": [
                            "ec2:DescribeInstances"
                        ],
                        "Resource": "*"
                    },
                    {
                        "Effect": "Allow",
                        "Action": [
                            "ec2:StartInstances",
                            "ec2:StopInstances"
                        ],
                        "Resource": "*",
                        "Condition": {
                            "StringEquals": {
                                "${key}": "${value}"
                            }
                        }
                    },
                    {
                        "Effect": "Deny",
                        "Action": [
                            "ec2:CreateTags",
                            "ec2:DeleteTags"
                        ],
                        "Resource": "*"
                    }
                ]
            }
          -
            key: !Sub 'aws:ResourceTag/${TagKey}'
            value: !Join [ '', [ !Join [ '/', [ '${aws:PrincipalTag', !Ref TagKey ] ], '}' ] ]
      Roles:
        - !Ref IAMRole

  EC2FullPolicy:
    Condition: CreateEC2Full
    Type: 'AWS::IAM::Policy'
    Properties:
      PolicyName: !Join [ '-', [ 'ec2-full', !Ref TagValue ] ]
      PolicyDocument:
        !Sub 
          - |
            {
                "Version": "2012-10-17",
                "Statement": [
                    {
                        "Effect": "Allow",
                        "Action": [
                            "cloudwatch:*",
                            "ec2:*",
                            "compute-optimizer:GetEnrollmentStatus",
                            "elasticloadbalancing:*",
                            "ebs:*",
                            "autoscaling:*",
                            "iam:ListInstanceProfiles"
                        ],
                        "Resource": "*"
                    },
                    {
                        "Effect": "Allow",
                        "Action": "iam:CreateServiceLinkedRole",
                        "Resource": "*",
                        "Condition": {
                            "StringEquals": {
                                "iam:AWSServiceName": [
                                    "autoscaling.amazonaws.com",
                                    "ec2scheduled.amazonaws.com",
                                    "elasticloadbalancing.amazonaws.com",
                                    "spot.amazonaws.com",
                                    "spotfleet.amazonaws.com",
                                    "transitgateway.amazonaws.com"
                                ]
                            }
                        }
                    },
                    {
                        "Effect": "Deny",
                        "Action": "ec2:*",
                        "Resource": "arn:aws:ec2:*:*:instance/*",
                        "Condition": {
                            "ForAllValues:StringNotEquals": {
                                "aws:ResourceTag/nytech:project": "${aws:PrincipalTag/nytech:project}"
                            },
                            "ForAllValues:StringNotLike": {
                                "aws:RequestTag/nytech:project": "winnow"
                            }
                        }
                    }
                ]
            }
          -
            key: !Sub 'aws:ResourceTag/${TagKey}'
            value: !Join [ '', [ !Join [ '/', [ '${aws:PrincipalTag', !Ref TagKey ] ], '}' ] ]
            key2: !Sub 'aws:RequestTag/${TagKey}'
            value2: !Ref TagValue
      Roles:
        - !Ref IAMRole

  SageMakerFullPolicy:
    Condition: CreateSageMakerFull
    Type: 'AWS::IAM::Policy'
    Properties:
      PolicyName: !Join [ '-', [ 'sagemaker-full', !Ref TagValue ] ]
      PolicyDocument:
        !Sub 
          - |
            {
                "Version": "2012-10-17",
                "Statement": [
                    {
                        "Effect": "Allow",
                        "Action": [
                            "sagemaker:Describe*"
                        ],
                        "Resource": "*"
                    },
                    {
                        "Effect": "Allow",
                        "Action": [
                            "sagemaker:*"
                        ],
                        "Resource": "*",
                        "Condition": {
                            "StringEquals": {
                                "${key}": "${value}"
                            }
                        }
                    },
                    {
                        "Sid": "DenySageMakerWithoutTags",
                        "Effect": "Deny",
                        "Action": [
                            "sagemaker:Create*",
                            "sagemaker:AddTags"
                        ],
                        "Resource": "*",
                        "Condition": {
                            "ForAllValues:StringNotLike": {
                                "${key2}": [
                                    "${value2}"
                                ]
                            }
                        }
                    }
                ]
            }
          -
            key: !Sub 'aws:ResourceTag/${TagKey}'
            value: !Join [ '', [ !Join [ '/', [ '${aws:PrincipalTag', !Ref TagKey ] ], '}' ] ]
            key2: !Sub 'aws:RequestTag/${TagKey}'
            value2: !Ref TagValue
      Roles:
        - !Ref IAMRole

  DMSPolicy:
    Condition: CreateDMS
    Type: 'AWS::IAM::Policy'
    Properties:
      PolicyName: !Join [ '-', [ 'dms', !Ref TagValue ] ]
      PolicyDocument:
        !Sub 
          - |
            {
                "Version": "2012-10-17",
                "Statement": [
                    {
                        "Action": [
                            "dms:Describe*"
                        ],
                        "Resource": "*",
                        "Effect": "Allow"
                    },
                    {
                        "Sid": "DenyDMSWithoutTags",
                        "Effect": "Deny",
                        "Action": [
                            "dms:Create*",
                            "dms:AddTagsToResource"
                        ],
                        "Resource": "*",
                        "Condition": {
                            "ForAllValues:StringNotLike": {
                                "${key2}": [
                                    "${value2}"
                                ]
                            }
                        }
                    },
                    {
                        "Action": [
                            "dms:Create*",
                            "dms:AddTagsToResource"
                        ],
                        "Resource": "*",
                        "Effect": "Allow"
                    },
                    {
                        "Action": [
                            "dms:TestConnection",
                            "dms:ListTagsForResource",
                            "dms:DescribeReplicationTaskIndividualAssessments",
                            "dms:StartReplicationTask",
                            "dms:StartReplicationTaskAssessmentRun",
                            "dms:DescribeApplicableIndividualAssessments",
                            "dms:DescribeReplicationTaskAssessmentRuns",
                            "dms:StopReplicationTask",
                            "dms:DescribeReplicationInstanceTaskLogs",
                            "dms:DescribeTableStatistics",
                            "dms:StartReplicationTaskAssessment",
                            "dms:DescribeReplicationTaskAssessmentResults",
                            "dms:DeleteConnection",
                            "dms:DeleteEndpoint",
                            "dms:DeleteReplicationInstance",
                            "dms:DeleteReplicationTask",
                            "dms:ModifyReplicationInstance",
                            "dms:ModifyReplicationTask",
                            "dms:ReloadTables",
                            "dms:RemoveTagsFromResource"
                        ],
                        "Resource": [
                            "arn:aws:dms:*:${account}:*"
                        ],
                        "Condition": {
                            "StringEquals": {
                                "${key}": "${value}"
                            }
                        },
                        "Effect": "Allow"
                    },
                    {
                        "Action": [
                            "kms:ListAliases",
                            "kms:DescribeKey"
                        ],
                        "Resource": "*",
                        "Effect": "Allow"
                    },
                    {
                        "Action": [
                            "iam:PassRole",
                            "iam:Get*",
                            "iam:List*"
                        ],
                        "Resource": "*",
                        "Effect": "Allow"
                    },
                    {
                        "Action": [
                            "ec2:DescribeVpcs",
                            "ec2:DescribeInternetGateways",
                            "ec2:DescribeAvailabilityZones",
                            "ec2:DescribeSubnets",
                            "ec2:DescribeSecurityGroups"
                        ],
                        "Resource": "*",
                        "Effect": "Allow"
                    },
                    {
                        "Action": [
                            "cloudwatch:Get*",
                            "cloudwatch:List*",
                            "cloudwatch:Describe*",
                            "logs:Get*",
                            "logs:List*",
                            "logs:Describe*",
                            "logs:StartQuery",
                            "logs:StopQuery",
                            "logs:PutQueryDefinition",
                            "logs:FilterLogEvents"
                        ],
                        "Resource": "*",
                        "Effect": "Allow"
                    }
                ]
            }
          -
            key: !Sub 'aws:ResourceTag/${TagKey}'
            value: !Join [ '', [ !Join [ '/', [ '${aws:PrincipalTag', !Ref TagKey ] ], '}' ] ]
            key2: !Sub 'aws:RequestTag/${TagKey}'
            value2: !Ref TagValue
            account: !Ref 'AWS::AccountId'
      Roles:
        - !Ref IAMRole

  SQSPolicy:
    Condition: CreateSQS
    Type: 'AWS::IAM::Policy'
    Properties:
      PolicyName: !Join [ '-', [ 'sqs', !Ref TagValue ] ]
      PolicyDocument:
        !Sub 
          - |
            {
                "Version": "2012-10-17",
                "Statement": [
                    {
                        "Effect": "Allow",
                        "Action": [
                            "sqs:*"
                        ],
                        "Resource": "*"
                    }
                ]
            }
          -
            key: !Sub 'aws:ResourceTag/${TagKey}'
            value: !Join [ '', [ !Join [ '/', [ '${aws:PrincipalTag', !Ref TagKey ] ], '}' ] ]
      Roles:
        - !Ref IAMRole

  ECSPolicy:
    Condition: CreateECS
    Type: 'AWS::IAM::Policy'
    Properties:
      PolicyName: !Join [ '-', [ 'ecs', !Ref TagValue ] ]
      PolicyDocument:
        !Sub 
          - |
            {
                "Version": "2012-10-17",
                "Statement": [
                    {
                        "Effect": "Allow",
                        "Action": [
                            "ecs:List*"
                        ],
                        "Resource": "*"
                    },
                    {
                        "Effect": "Allow",
                        "Action": [
                            "ecs:Create*",
                            "ecs:TagResource"
                        ],
                        "Resource": "*"
                    },
                    {
                        "Sid": "DenyECSWithoutTags",
                        "Effect": "Deny",
                        "Action": [
                            "ecs:Create*",
                            "ecs:TagResource"
                        ],
                        "Resource": "*",
                        "Condition": {
                            "ForAllValues:StringNotLike": {
                                "${key2}": [
                                    "${value2}"
                                ]
                            }
                        }
                    },
                    {
                        "Effect": "Allow",
                        "Action": [
                            "ecs:*"
                        ],
                        "Resource": "*",
                        "Condition": {
                            "StringEquals": {
                                "${key}": "${value}"
                            }
                        }
                    },
                    {
                        "Effect": "Allow",
                        "Action": [
                            "cloudwatch:GetMetricStatistics"
                        ],
                        "Resource": "*"
                    }
                ]
            }
          -
            key: !Sub 'aws:ResourceTag/${TagKey}'
            value: !Join [ '', [ !Join [ '/', [ '${aws:PrincipalTag', !Ref TagKey ] ], '}' ] ]
            key2: !Sub 'aws:RequestTag/${TagKey}'
            value2: !Ref TagValue
      Roles:
        - !Ref IAMRole

  GluePolicy:
    Condition: CreateGlue
    Type: 'AWS::IAM::Policy'
    Properties:
      PolicyName: !Join [ '-', [ 'glue', !Ref TagValue ] ]
      PolicyDocument:
        !Sub 
          - |
            {
                "Version": "2012-10-17",
                "Statement": [
                    {
                        "Effect": "Allow",
                        "Action": [
                            "glue:*"
                        ],
                        "Resource": "*"
                    },
                    {
                        "Effect": "Allow",
                        "Action": [
                            "glue:CreateConnection", 
                            "glue:UpdateConnection", 
                            "glue:GetConnection",
                            "glue:DeleteConnection"
                        ],
                        "Resource": "*",
                        "Condition": {
                            "StringEquals": {
                                "${key}": "${value}"
                            }
                        }
                    }
                ]
            }
          -
            key: !Sub 'aws:ResourceTag/${TagKey}'
            value: !Join [ '', [ !Join [ '/', [ '${aws:PrincipalTag', !Ref TagKey ] ], '}' ] ]
      Roles:
        - !Ref IAMRole