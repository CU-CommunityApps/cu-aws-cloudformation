###############################################################################
# Take Heed!
# 
# The NACL created by this template can support a VPC with CIDR block(s) in the
# 100.64.0.0/10 range. If this is your situation, you will need to request
# a NACL rule quota increase since the number of outbound rules is greater than
# the default 20 rule quota before using this template. See
# https://docs.aws.amazon.com/vpc/latest/userguide/amazon-vpc-limits.html#vpc-limits-nacls
###############################################################################
---
AWSTemplateFormatVersion: '2010-09-09'

Description: "Creates the strict variant of the standard baseline Network ACL. Source: https://github.com/CU-CommunityApps/cu-aws-cloudformation/blob/main/baseline-nacl/strict-baseline-nacl.yaml"

Metadata:
  Source: https://github.com/CU-CommunityApps/cu-aws-cloudformation/blob/main/baseline-nacl/strict-baseline-nacl.yaml
  Version: "1.0.0"
  RecommendedStackName: cornell-baseline-nacl
  ChangeLog:
    "1.0.0":
      - inital release which is a reworked NACL based on v2.2.0 of baseline-nacl.yaml

Parameters:

  TargetVPCParam:
    Type: AWS::EC2::VPC::Id
    Description: In which VPC should this Network ACL be created?

  NACLNameParam:
    Type: String
    Default: cornell-baseline-nacl
    Description: What name do you want to use for the NACL?

  VersionParam:
    Description: CIT template version
    Type: String

  ContactEmailParam:
    Description: CIT contact email tag value
    Default: cloud-support@cornell.edu
    Type: String

  SourceURLParam:
    Description: URL of this template in source code repository
    Default: https://github.com/CU-CommunityApps/cu-aws-cloudformation/blob/main/baseline-nacl/strict-baseline-nacl.yaml
    Type: String

  EnvironmentParam:
    Description: Environment for the resources this template creates.
    Default: prod
    Type: String
    AllowedValues:
      - dev
      - test
      - prod

  DocumentationURLParam:
    Description: URL of documentation about this deployment or these resources
    Default: https://confluence.cornell.edu/x/rFL_Ew
    Type: String

  Include100Param:
    Description: Do the target VPCs have any CIDR blocks in 100.64.0.0/10?
    Default: false
    Type: String
    AllowedValues:
      - true
      - false

Conditions:
  Include100: !Equals 
    - !Ref Include100Param
    - true

Resources:

  KerberosPrefixList:
    Type: AWS::EC2::PrefixList
    DeletionPolicy: Retain
    Properties:
      AddressFamily: IPv4
      Entries:
        - Cidr: 52.200.35.38/32
          Description: kerberos-aws.login.cornell.edu
        - Cidr: 52.201.66.104/32
          Description: kerberos-aws2.login.cornell.edu
      MaxEntries: 4
      PrefixListName: cornell-kerberos
      Tags:
        - Key: Environment
          Value: !Ref EnvironmentParam
        - Key: Description
          Value: CIDRs of Cornell's official Kerberos servers in AWS
        - Key: Documentation
          Value: !Ref DocumentationURLParam
        - Key: cit:contact-email
          Value: !Ref ContactEmailParam
        - Key: cit:version
          Value: !Ref VersionParam
        - Key: cit:source
          Value:  !Ref SourceURLParam

  DirectoryPrefixList:
    Type: AWS::EC2::PrefixList
    DeletionPolicy: Retain
    Properties:
      AddressFamily: IPv4
      Entries:
        - Cidr: 3.228.209.25/32
          Description: query.directory.cornell.edu
        - Cidr: 3.218.140.210/32
          Description: query.directory.cornell.edu
        - Cidr: 35.170.14.255/32
          Description: test.directory.cornell.edu
        - Cidr: 3.229.3.150/32
          Description: test.directory.cornell.edu
      MaxEntries: 8
      PrefixListName: cornell-directory
      Tags:
        - Key: Environment
          Value: !Ref EnvironmentParam
        - Key: Description
          Value: CIDRs of Cornell's official test and prod directory servers in AWS
        - Key: Documentation
          Value: !Ref DocumentationURLParam
        - Key: cit:contact-email
          Value: !Ref ContactEmailParam
        - Key: cit:version
          Value: !Ref VersionParam
        - Key: cit:source
          Value:  !Ref SourceURLParam

  CampusPublicPrivateIpsPrefixList:
    Type: AWS::EC2::PrefixList
    DeletionPolicy: Retain
    Properties:
      AddressFamily: IPv4
      Entries:
        - Cidr: 10.0.0.0/8
        - Cidr: 128.84.0.0/16
        - Cidr: 128.253.0.0/16
        - Cidr: 132.236.0.0/16
        - Cidr: 192.35.82.0/24
        - Cidr: 192.122.235.0/24
        - Cidr: 192.122.236.0/24
      MaxEntries: 8
      PrefixListName: cornell-campus-public-and-private-cidrs
      Tags:
        - Key: Environment
          Value: !Ref EnvironmentParam
        - Key: Description
          Value: CIDRs of Cornell's private and public networks
        - Key: Documentation
          Value: !Ref DocumentationURLParam
        - Key: cit:contact-email
          Value: !Ref ContactEmailParam
        - Key: cit:version
          Value: !Ref VersionParam
        - Key: cit:source
          Value:  !Ref SourceURLParam

  VPCNetworkACL:
    Type: AWS::EC2::NetworkAcl
    DeletionPolicy: Retain
    Properties:
      VpcId: !Ref TargetVPCParam
      Tags:
        - Key: Name
          Value: !Ref NACLNameParam
        - Key: Environment
          Value: !Ref EnvironmentParam
        - Key: Description
          Value: Strict variant of the Cornell baseline Network ACL
        - Key: Documentation
          Value: !Ref DocumentationURLParam
        - Key: cit:contact-email
          Value: !Ref ContactEmailParam
        - Key: cit:version
          Value: !Ref VersionParam
        - Key: cit:source
          Value:  !Ref SourceURLParam

  NetworkACLRuleIn0100:
    Type: AWS::EC2::NetworkAclEntry
    DeletionPolicy: Retain
    Properties:
      CidrBlock: 0.0.0.0/0
      NetworkAclId: !Ref VPCNetworkACL
      PortRange:
        From: 80
        To: 80
      Protocol: 6
      RuleAction : allow
      RuleNumber : 100

  NetworkACLRuleIn0200:
    Type: AWS::EC2::NetworkAclEntry
    DeletionPolicy: Retain
    Properties:
      CidrBlock: 0.0.0.0/0
      NetworkAclId: !Ref VPCNetworkACL
      PortRange:
        From: 443
        To: 443
      Protocol: 6
      RuleAction : allow
      RuleNumber : 200

  NetworkACLRuleIn0300:
    Type: AWS::EC2::NetworkAclEntry
    DeletionPolicy: Retain
    Properties:
      CidrBlock: 10.0.0.0/8
      NetworkAclId: !Ref VPCNetworkACL
      Protocol: -1
      RuleAction : allow
      RuleNumber : 300

  NetworkACLRuleIn0400:
    Type: AWS::EC2::NetworkAclEntry
    DeletionPolicy: Retain
    Properties:
      CidrBlock: 128.84.0.0/16
      NetworkAclId: !Ref VPCNetworkACL
      Protocol: -1
      RuleAction : allow
      RuleNumber : 400

  NetworkACLRuleIn0500:
    Type: AWS::EC2::NetworkAclEntry
    DeletionPolicy: Retain
    Properties:
      CidrBlock: 128.253.0.0/16
      NetworkAclId: !Ref VPCNetworkACL
      Protocol: -1
      RuleAction : allow
      RuleNumber : 500

  NetworkACLRuleIn0600:
    Type: AWS::EC2::NetworkAclEntry
    DeletionPolicy: Retain
    Properties:
      CidrBlock: 132.236.0.0/16
      NetworkAclId: !Ref VPCNetworkACL
      Protocol: -1
      RuleAction : allow
      RuleNumber : 600

  NetworkACLRuleIn0700:
    Type: AWS::EC2::NetworkAclEntry
    DeletionPolicy: Retain
    Properties:
      CidrBlock: 192.35.82.0/24
      NetworkAclId: !Ref VPCNetworkACL
      Protocol: -1
      RuleAction : allow
      RuleNumber : 700

  NetworkACLRuleIn0800:
    Type: AWS::EC2::NetworkAclEntry
    DeletionPolicy: Retain
    Properties:
      CidrBlock: 192.122.235.0/24
      NetworkAclId: !Ref VPCNetworkACL
      Protocol: -1
      RuleAction : allow
      RuleNumber : 800

  NetworkACLRuleIn0900:
    Type: AWS::EC2::NetworkAclEntry
    DeletionPolicy: Retain
    Properties:
      CidrBlock: 192.122.236.0/24
      NetworkAclId: !Ref VPCNetworkACL
      Protocol: -1
      RuleAction : allow
      RuleNumber : 900

  # This any subnet in the VPC to accept traffic
  # from any subnets in the 100.64.0.0/10 that happen to be in the VPC.
  # Since the 100.64.0.0/10 CIDR block isn't routable, any traffic from
  # a 100.64.0.0/10 CIDR block is local to the VPC.
  NetworkACLRuleIn0950:
    Type: AWS::EC2::NetworkAclEntry
    DeletionPolicy: Retain
    Condition: Include100
    Properties:
      CidrBlock: 100.64.0.0/10
      NetworkAclId: !Ref VPCNetworkACL
      Protocol: -1
      RuleAction : allow
      RuleNumber : 950

  NetworkACLRuleIn1000:
    Type: AWS::EC2::NetworkAclEntry
    DeletionPolicy: Retain
    Properties:
      CidrBlock: 0.0.0.0/0
      NetworkAclId: !Ref VPCNetworkACL
      PortRange:
        From: 3389
        To: 3389
      Protocol: 6
      RuleAction : deny
      RuleNumber : 1000

  NetworkACLRuleIn1100:
    Type: AWS::EC2::NetworkAclEntry
    DeletionPolicy: Retain
    Properties:
      CidrBlock: 0.0.0.0/0
      NetworkAclId: !Ref VPCNetworkACL
      PortRange:
        From: 1024
        To: 65535
      Protocol: 6
      RuleAction : allow
      RuleNumber : 1100

  NetworkACLRuleIn1200:
    Type: AWS::EC2::NetworkAclEntry
    DeletionPolicy: Retain
    Properties:
      CidrBlock: 0.0.0.0/0
      NetworkAclId: !Ref VPCNetworkACL
      PortRange:
        From: 1024
        To: 65535
      Protocol: 17
      RuleAction : allow
      RuleNumber : 1200

  NetworkACLRuleIn1300:
    Type: AWS::EC2::NetworkAclEntry
    DeletionPolicy: Retain
    Properties:
      CidrBlock: 0.0.0.0/0
      NetworkAclId: !Ref VPCNetworkACL
      PortRange:
        From: 123
        To: 123
      Protocol: 17
      RuleAction : allow
      RuleNumber : 1300

  # Elastic IP of AWS-based Cornell Kerberos Server
  # kerberos-aws.login.cornell.edu
  NetworkACLRuleIn1400:
    Type: AWS::EC2::NetworkAclEntry
    DeletionPolicy: Retain
    Properties:
      CidrBlock: 52.200.35.38/32
      NetworkAclId: !Ref VPCNetworkACL
      Protocol: -1
      RuleAction : allow
      RuleNumber : 1400

  # Elastic IP of AWS-based Cornell Kerberos Server
  # kerberos-aws2.login.cornell.edu
  NetworkACLRuleIn1500:
    Type: AWS::EC2::NetworkAclEntry
    DeletionPolicy: Retain
    Properties:
      CidrBlock: 52.201.66.104/32
      NetworkAclId: !Ref VPCNetworkACL
      Protocol: -1
      RuleAction : allow
      RuleNumber : 1500

  NetworkACLRuleOut0100:
    Type: AWS::EC2::NetworkAclEntry
    DeletionPolicy: Retain
    Properties:
      Egress: true
      CidrBlock: 0.0.0.0/0
      NetworkAclId: !Ref VPCNetworkACL
      PortRange:
        From: 22
        To: 22
      Protocol: 6
      RuleAction : allow
      RuleNumber : 100

  NetworkACLRuleOut0200:
    Type: AWS::EC2::NetworkAclEntry
    DeletionPolicy: Retain
    Properties:
      Egress: true
      CidrBlock: 0.0.0.0/0
      NetworkAclId: !Ref VPCNetworkACL
      PortRange:
        From: 80
        To: 80
      Protocol: 6
      RuleAction : allow
      RuleNumber : 200

  NetworkACLRuleOut0300:
    Type: AWS::EC2::NetworkAclEntry
    DeletionPolicy: Retain
    Properties:
      Egress: true
      CidrBlock: 0.0.0.0/0
      NetworkAclId: !Ref VPCNetworkACL
      PortRange:
        From: 443
        To: 443
      Protocol: 6
      RuleAction : allow
      RuleNumber : 300

  NetworkACLRuleOut0400:
    Type: AWS::EC2::NetworkAclEntry
    DeletionPolicy: Retain
    Properties:
      Egress: true
      CidrBlock: 0.0.0.0/0
      NetworkAclId: !Ref VPCNetworkACL
      PortRange:
        From: 1024
        To: 65535
      Protocol: 6
      RuleAction : allow
      RuleNumber : 400

  NetworkACLRuleOut0500:
    Type: AWS::EC2::NetworkAclEntry
    DeletionPolicy: Retain
    Properties:
      Egress: true
      CidrBlock: 0.0.0.0/0
      NetworkAclId: !Ref VPCNetworkACL
      PortRange:
        From: 1024
        To: 65535
      Protocol: 17
      RuleAction : allow
      RuleNumber : 500

  NetworkACLRuleOut0600:
    Type: AWS::EC2::NetworkAclEntry
    DeletionPolicy: Retain
    Properties:
      Egress: true
      CidrBlock: 0.0.0.0/0
      NetworkAclId: !Ref VPCNetworkACL
      PortRange:
        From: 123
        To: 123
      Protocol: 17
      RuleAction : allow
      RuleNumber : 600

  # Elastic IP of AWS-based Cornell Kerberos Server
  # kerberos-aws.login.cornell.edu
  NetworkACLRuleOut0610:
    Type: AWS::EC2::NetworkAclEntry
    DeletionPolicy: Retain
    Properties:
      Egress: true
      CidrBlock: 52.200.35.38/32
      NetworkAclId: !Ref VPCNetworkACL
      Protocol: -1
      RuleAction : allow
      RuleNumber : 610

  # Elastic IP of AWS-based Cornell Kerberos Server
  # kerberos-aws2.login.cornell.edu
  NetworkACLRuleOut0620:
    Type: AWS::EC2::NetworkAclEntry
    DeletionPolicy: Retain
    Properties:
      Egress: true
      CidrBlock: 52.201.66.104/32
      NetworkAclId: !Ref VPCNetworkACL
      Protocol: -1
      RuleAction : allow
      RuleNumber : 620

  NetworkACLRuleOut0700:
    Type: AWS::EC2::NetworkAclEntry
    DeletionPolicy: Retain
    Properties:
      Egress: true
      CidrBlock: 10.0.0.0/8
      NetworkAclId: !Ref VPCNetworkACL
      Protocol: -1
      RuleAction : allow
      RuleNumber : 700

  NetworkACLRuleOut0800:
    Type: AWS::EC2::NetworkAclEntry
    DeletionPolicy: Retain
    Properties:
      Egress: true
      CidrBlock: 128.84.0.0/16
      NetworkAclId: !Ref VPCNetworkACL
      Protocol: -1
      RuleAction : allow
      RuleNumber : 800

  NetworkACLRuleOut0900:
    Type: AWS::EC2::NetworkAclEntry
    DeletionPolicy: Retain
    Properties:
      Egress: true
      CidrBlock: 128.253.0.0/16
      NetworkAclId: !Ref VPCNetworkACL
      Protocol: -1
      RuleAction : allow
      RuleNumber : 900

  NetworkACLRuleOut1000:
    Type: AWS::EC2::NetworkAclEntry
    DeletionPolicy: Retain
    Properties:
      Egress: true
      CidrBlock: 132.236.0.0/16
      NetworkAclId: !Ref VPCNetworkACL
      Protocol: -1
      RuleAction : allow
      RuleNumber : 1000

  NetworkACLRuleOut1100:
    Type: AWS::EC2::NetworkAclEntry
    DeletionPolicy: Retain
    Properties:
      Egress: true
      CidrBlock: 192.35.82.0/24
      NetworkAclId: !Ref VPCNetworkACL
      Protocol: -1
      RuleAction : allow
      RuleNumber : 1100

  NetworkACLRuleOut1200:
    Type: AWS::EC2::NetworkAclEntry
    DeletionPolicy: Retain
    Properties:
      Egress: true
      CidrBlock: 192.122.235.0/24
      NetworkAclId: !Ref VPCNetworkACL
      Protocol: -1
      RuleAction : allow
      RuleNumber : 1200

  NetworkACLRuleOut1300:
    Type: AWS::EC2::NetworkAclEntry
    DeletionPolicy: Retain
    Properties:
      Egress: true
      CidrBlock: 192.122.236.0/24
      NetworkAclId: !Ref VPCNetworkACL
      Protocol: -1
      RuleAction : allow
      RuleNumber : 1300

  # Elastic IP of AWS-based TEST directory (test.directory.cornell.edu)
  # IP address #1
  # All protocols/ports are allowed since this IP may eventually be used 
  # for other services.
  NetworkACLRuleOut1400:
    Type: AWS::EC2::NetworkAclEntry
    DeletionPolicy: Retain
    Properties:
      Egress: true
      CidrBlock: 35.170.14.255/32
      NetworkAclId: !Ref VPCNetworkACL
      Protocol: -1
      RuleAction : allow
      RuleNumber : 1400

  # Elastic IP of AWS-based TEST directory (test.directory.cornell.edu)
  # IP address #2
  # All protocols/ports are allowed since this IP may eventually be used 
  # for other services.
  NetworkACLRuleOut1500:
    Type: AWS::EC2::NetworkAclEntry
    DeletionPolicy: Retain
    Properties:
      Egress: true
      CidrBlock: 3.229.3.150/32
      NetworkAclId: !Ref VPCNetworkACL
      Protocol: -1
      RuleAction : allow
      RuleNumber : 1500

  # Elastic IP of AWS-based PROD directory (query.directory.cornell.edu)
  # IP address #1
  # All protocols/ports are allowed since this IP may eventually be used 
  # for other services.
  NetworkACLRuleOut1600:
    Type: AWS::EC2::NetworkAclEntry
    DeletionPolicy: Retain
    Properties:
      Egress: true
      CidrBlock: 3.228.209.25/32
      NetworkAclId: !Ref VPCNetworkACL
      Protocol: -1
      RuleAction : allow
      RuleNumber : 1600

  # Elastic IP of AWS-based PROD directory (query.directory.cornell.edu)
  # IP address #2
  # All protocols/ports are allowed since this IP may eventually be used 
  # for other services.
  NetworkACLRuleOut1700:
    Type: AWS::EC2::NetworkAclEntry
    DeletionPolicy: Retain
    Properties:
      Egress: true
      CidrBlock: 3.218.140.210/32
      NetworkAclId: !Ref VPCNetworkACL
      Protocol: -1
      RuleAction : allow
      RuleNumber : 1700

  # This allows traffic in any subnet in the VPC
  # to reach any subnets in the 100.64.0.0/10 that happen to be in the VPC.
  # Since the 100.64.0.0/10 CIDR block isn't routable, any traffic to
  # a 100.64.0.0/10 CIDR block is local to the VPC.
  NetworkACLRuleOut1800:
    Type: AWS::EC2::NetworkAclEntry
    DeletionPolicy: Retain
    Condition: Include100
    Properties:
      Egress: true
      CidrBlock: 100.64.0.0/10
      NetworkAclId: !Ref VPCNetworkACL
      Protocol: -1
      RuleAction : allow
      RuleNumber : 1800
